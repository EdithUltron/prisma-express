generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL_SQ")
}

model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique(map: "sqlite_autoindex_auth_group_1")
  auth_group_permissions auth_group_permissions[]
  auth_user_groups       auth_user_groups[]
}

model auth_group_permissions {
  id              Int             @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([permission_id], map: "auth_group_permissions_permission_id_84c5c92e")
  @@index([group_id], map: "auth_group_permissions_group_id_b120cbf9")
}

model auth_permission {
  id                         Int                          @id @default(autoincrement())
  content_type_id            Int
  codename                   String
  name                       String
  auth_group_permissions     auth_group_permissions[]
  django_content_type        django_content_type          @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  auth_user_user_permissions auth_user_user_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
  @@index([content_type_id], map: "auth_permission_content_type_id_2f476e4b")
}

model auth_user {
  id                         Int                          @id @default(autoincrement())
  password                   String
  last_login                 DateTime?
  is_superuser               Unsupported("bool")
  username                   String                       @unique(map: "sqlite_autoindex_auth_user_1")
  last_name                  String
  email                      String
  is_staff                   Unsupported("bool")
  is_active                  Unsupported("bool")
  date_joined                DateTime
  first_name                 String
  auth_user_groups           auth_user_groups[]
  auth_user_user_permissions auth_user_user_permissions[]
  django_admin_log           django_admin_log[]
}

model auth_user_groups {
  id         Int        @id @default(autoincrement())
  user_id    Int
  group_id   Int
  auth_group auth_group @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  auth_user  auth_user  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([user_id, group_id], map: "auth_user_groups_user_id_group_id_94350c0c_uniq")
  @@index([group_id], map: "auth_user_groups_group_id_97559544")
  @@index([user_id], map: "auth_user_groups_user_id_6a12ed8b")
}

model auth_user_user_permissions {
  id              Int             @id @default(autoincrement())
  user_id         Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  auth_user       auth_user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([user_id, permission_id], map: "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq")
  @@index([permission_id], map: "auth_user_user_permissions_permission_id_1fbb5f2c")
  @@index([user_id], map: "auth_user_user_permissions_user_id_a95ead1b")
}

model django_admin_log {
  id                  Int                              @id @default(autoincrement())
  object_id           String?
  object_repr         String
  action_flag         Unsupported("smallint unsigned")
  change_message      String
  content_type_id     Int?
  user_id             Int
  action_time         DateTime
  auth_user           auth_user                        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  django_content_type django_content_type?             @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([user_id], map: "django_admin_log_user_id_c564eba6")
  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb")
}

model django_content_type {
  id                Int                 @id @default(autoincrement())
  app_label         String
  model             String
  auth_permission   auth_permission[]
  django_admin_log  django_admin_log[]
  home_certificates home_certificates[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      Int      @id @default(autoincrement())
  app     String
  name    String
  applied DateTime
}

model django_session {
  session_key  String   @id
  session_data String
  expire_date  DateTime

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
}

model home_activities {
  id              Int             @id @default(autoincrement())
  name            String?
  description     String?
  date            DateTime
  register_id     BigInt
  signup_register signup_register @relation(fields: [register_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([register_id], map: "home_activities_register_id_4c2ba5ed")
}

model home_additional {
  id              Int                 @id @default(autoincrement())
  jvd             Unsupported("bool")
  register_id     BigInt
  aadhar          String?
  fatheraadhar    String?
  fathername      String?
  motheraadhar    String?
  mothername      String?
  signup_register signup_register     @relation(fields: [register_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([register_id], map: "home_additional_register_id_3e75c4b7")
}

model home_awards {
  id              Int             @id @default(autoincrement())
  name            String?
  description     String?
  date            DateTime
  register_id     BigInt
  cert_count      Int
  signup_register signup_register @relation(fields: [register_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([register_id], map: "home_awards_register_id_5c9278c9")
}

model home_certificates {
  id                  Int                             @id @default(autoincrement())
  certificate_name    String
  certificate_file    String
  object_id           Unsupported("integer unsigned")
  content_type_id     Int
  django_content_type django_content_type             @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([content_type_id, object_id], map: "home_certif_content_8f10e7_idx")
  @@index([content_type_id], map: "home_certificates_content_type_id_1c2fbc6b")
}

model home_education {
  id              Int             @id @default(autoincrement())
  location        String?
  course          String?
  startdate       DateTime
  enddate         DateTime
  register_id     BigInt
  school          String?
  name            String?
  signup_register signup_register @relation(fields: [register_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([register_id], map: "home_education_register_id_3526d102")
}

model home_experience {
  id              Int             @id @default(autoincrement())
  company         String?
  location        String?
  role            String?
  package         String?
  startdate       DateTime
  enddate         DateTime
  workmode        String
  mode            String
  createdAt       DateTime
  register_id     BigInt
  type            String
  cert_count      Int
  signup_register signup_register @relation(fields: [register_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([register_id], map: "home_experience_register_id_e074a945")
}

model home_facultyeducation {
  id                     Int                    @id @default(autoincrement())
  school                 String?
  name                   String?
  location               String?
  course                 String?
  startdate              DateTime
  enddate                DateTime
  register_id            BigInt
  signup_facultyregister signup_facultyregister @relation(fields: [register_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([register_id], map: "home_facultyeducation_register_id_a82d0a0e")
}

model home_links {
  id              Int             @id @default(autoincrement())
  url             String?
  register_id     BigInt
  name            String?
  signup_register signup_register @relation(fields: [register_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([register_id], map: "home_links_register_id_90a98701")
}

model home_projects {
  id              Int             @id @default(autoincrement())
  name            String?
  description     String?
  url             String?
  register_id     BigInt
  signup_register signup_register @relation(fields: [register_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([register_id], map: "home_projects_register_id_dc952d1f")
}

model home_publications {
  id              Int             @id @default(autoincrement())
  name            String?
  description     String?
  date            DateTime
  register_id     BigInt
  cert_count      Int
  signup_register signup_register @relation(fields: [register_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([register_id], map: "home_publications_register_id_adf1b29c")
}

model home_scholarships {
  id              Int             @id @default(autoincrement())
  name            String?
  description     String?
  date            DateTime
  register_id     BigInt
  cert_count      Int
  signup_register signup_register @relation(fields: [register_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([register_id], map: "home_scholarships_register_id_db4e7c56")
}

model home_skills {
  id              Int             @id @default(autoincrement())
  skill           String?
  register_id     BigInt
  rating          String
  signup_register signup_register @relation(fields: [register_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([register_id], map: "home_skills_register_id_d7700cdd")
}

model login_facultylogin {
  id                     Int                    @id @default(autoincrement())
  email                  String                 @unique(map: "sqlite_autoindex_login_facultylogin_1")
  password               String
  register_id            BigInt
  signup_facultyregister signup_facultyregister @relation(fields: [register_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([register_id], map: "login_facultylogin_register_id_8ae70b52")
}

model login_login {
  id              Int             @id @default(autoincrement())
  email           String          @unique(map: "sqlite_autoindex_login_login_1")
  password        String
  register_id     BigInt
  signup_register signup_register @relation(fields: [register_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([register_id], map: "login_login_register_id_866222c6")
}

model signup_adminregister {
  id         Int      @id @default(autoincrement())
  email      String   @unique(map: "sqlite_autoindex_signup_adminregister_1")
  password   String
  phone      String?
  createdAt  DateTime
  department String
}

model signup_facultyregister {
  id                    Int                     @id @default(autoincrement())
  fullname              String?
  email                 String                  @unique(map: "sqlite_autoindex_signup_facultyregister_1")
  password              String
  phone                 String?
  department            String
  aboutme               String?
  profile_pic           String
  createdAt             DateTime
  home_facultyeducation home_facultyeducation[]
  login_facultylogin    login_facultylogin[]
}

model signup_register {
  id                Int                 @id @default(autoincrement())
  roll              String?
  email             String              @unique(map: "sqlite_autoindex_signup_register_1")
  password          String
  phone             String?
  department        String
  createdAt         DateTime
  fullname          String?
  profile_pic       String
  aboutme           String?
  year              String
  home_activities   home_activities[]
  home_additional   home_additional[]
  home_awards       home_awards[]
  home_education    home_education[]
  home_experience   home_experience[]
  home_links        home_links[]
  home_projects     home_projects[]
  home_publications home_publications[]
  home_scholarships home_scholarships[]
  home_skills       home_skills[]
  login_login       login_login[]
}
